# Footprint:
# param which specifies geometry of the base (i.e top view)
footprint: [[0.85,0], [0.75,0.15], [0.15, 0.28], [0.15, 0.34], [-0.08, 0.34], [-0.15, 0.26], [-0.15, -0.26], [-0.08, -0.34], [0.15, -0.34], [0.15, -0.28], [0.75,-0.15]]
footprint_padding: 0.05


# Plugins:
# rospack plugins --attrib=plugin costmap_2d
# costmap_2d /opt/ros/kinetic/share/costmap_2d/costmap_plugins.xml
# Then view that file.


obstacle_layer:
  # Specify sensors used in the costmap
  laser_distance_sensor: {sensor_frame: laser_link, data_type: LaserScan, topic: scan, marking: true, clearing: true, obstacle_range: 4.5, raytrace_range: 4.5}

  #laser_distance_sensor_fake: {sensor_frame: laser_link, data_type: LaserScan, topic: fakescan, marking: true, clearing: false, obstacle_range: 4.5, raytrace_range: 4.5}

  lane_detection_left: {sensor_frame: camera_left, data_type: PointCloud2, topic: camera/left/points2, marking: true, clearing: false, obstacle_range: 20, min_obstacle_height: -0.5, observation_persistence: 2}

  lane_detection_right: {sensor_frame: camera_right, data_type: PointCloud2, topic: camera/right/points2, marking: true, clearing: false, obstacle_range: 20, min_obstacle_height: -0.5, observation_persistence: 2}

  # marking: scan value < obstacle_range => obstacle marked
  # clearing: scan value < raytrace_range => space until that distance marked clear

lanes_left:
  topic: "/camera/left/lane/updates"
lanes_right:
  topic: "/camera/right/lane/updates"

# These params also help fill the gaps in lanes.
inflation_layer:
  # meters away from obstacles which should be marked danger.
  inflation_radius: 0.2
  cost_scaling_factor: 10 # Slower decrease in cost3

# scan value < obstacle_range => obstacle marked

# scan value < raytrace_range => space until that distance marked clear


# param which specifies geometry of the base (i.e top view) TODO
# footprint: [[x0, y0], [x1, y1], ... [xn, yn]]
# Used instead of footprint, assumes robot has circular shape
robot_radius: 0.6

# meters away from obstacles which should be marked danger.
inflation_radius: 0.351

observation_sources: laser_distance_sensor lane_detection

laser_distance_sensor: {sensor_frame: laser_link, data_type: LaserScan, topic: scan, marking: true, clearing: true, obstacle_range: 4.5, raytrace_range: 4.5}

lane_detection: {sensor_frame: camera_left, data_type: PointCloud2, topic: camera/points2, marking: true, clearing: false, obstacle_range: 20, min_obstacle_height: -0.5} # observation_persistence: 5}

# point_cloud_sensor: {sensor_frame: frame_name, data_type: PointCloud, topic: topic_name, marking: true, clearing: true}
